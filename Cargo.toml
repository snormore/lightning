[workspace]
resolver = "2"
members = [
    "core/*",
    "core/interfaces/proc",
    "etc/workspace-hack",
    "lib/*",
    "services/*",
    "services/ai/examples/rust/*",
]
exclude = [
    "etc/global-metrics",
    "lib/cdk",
    "lib/blake3-js",
    "lib/cdk-x-platform-test",
    "etc/ebpf/ebpf",
    "etc/ebpf/common",
    "etc/ebpf/service",
    "etc/global-metrics",
    "etc/socket-logger",
    "etc/tui",
]


[workspace.package]
version = "0.1.0"
edition = "2021"

[workspace.dependencies]
anyhow = "1.0"
async-trait = "0.1"
autometrics = { version = "0.6.0", features = ["prometheus-exporter"] }
axum = { version = "0.6.18", features = ["tokio"] }
bincode = "1.3.3"
cid = "0.10.1"
ethers = "2.0.10"
num-bigint = "0.4.0"
base64 = "0.21"
bytes = "1.4"
futures = "0.3"
lru = "0.10.0"
multihash = "0.19"
rand = { version = "0.8.5", features = ["small_rng"] }
reqwest = "0.11.18"
serde = { version = "1.0", features = ["derive"] }
serde-big-array = "0.5.1"
serde_json = "1.0.96"
humantime-serde = "1.1.1"
thiserror = "1.0"
tempdir = "0.3"
parking_lot = "0.12.1"
tokio = { version = "1.28", features = ["full", "tracing"] }
tokio-stream = "0.1"
tokio-util = { version = "0.7", features = ["time"] }
tracing = "0.1.37"
zeroize = "1.6"
scc = "1.8.1"
num-traits = "0.2.15"
num-derive = "0.3.3"
lazy_static = "1.4.0"
schemars = "0.8.1"
rkyv = { version = "0.7.44", features = [
    "validation",
    "alloc",
    "std",
    "hashbrown",
    "bytecheck",
    "alloc",
] }
triomphe = "0.1"

# Our libraries
lightning-types = { path = "core/types" }
affair = { path = "lib/affair" }
atomo = { path = "lib/atomo" }
atomo-rocks = { path = "lib/atomo-rocks" }
fleek-crypto = { path = "lib/fleek-crypto" }
fleek-ipld = { path = "lib/fleek-ipld" }
hp-fixed = { path = "lib/hp-fixed" }
ink-quill = { path = "lib/ink-quill" }
resolved-pathbuf = { path = "lib/resolved-pathbuf" }
panic-report = { path = "lib/panic-report" }
better-shutdown = { path = "lib/better-shutdown" }
fleek-blake3 = "1.5"

# Config for 'cargo dist'
[workspace.metadata.dist]
# The preferred cargo-dist version to use in CI (Cargo.toml SemVer syntax)
cargo-dist-version = "0.15.0"
# CI backends to support
ci = "github"
# The installers to generate for each app
installers = ["shell"]
# Target platforms to build apps for (Rust target-triple syntax)
# https://doc.rust-lang.org/nightly/rustc/platform-support.html
targets = [
    # "aarch64-apple-darwin",
    # "aarch64-unknown-linux-gnu",
    "x86_64-unknown-linux-gnu",
]
# Publish jobs to run in CI
pr-run-mode = "plan"
# Whether to install an updater program
install-updater = false
# We override RUSTFLAGS, so we must permit changes from the default template.
allow-dirty = ["ci"]
# Specifies that all features for a package should be enabled when building it.
all-features = true

[workspace.metadata.dist.dependencies.apt]
build-essential = '*'
gcc = '*'
cmake = '*'
clang = '*'
pkg-config = '*'
libssl-dev = '*'
protobuf-compiler = '*'

[workspace.metadata.dist.github-custom-runners]
# x86_64-unknown-linux-gnu = "ubuntu-22.04"
x86_64-unknown-linux-gnu = "namespace-profile-lightning-builder-ubuntu-amd64"

# Since MystenLabs uses Hakari in the sui repository, and we bring narwhal in from there, this
# results into all of their dependencies and packages to be listed in their workspace-hack crate.
# That adds a huge amount of unwanted dependencies to our crate. The `empty-workspace-hack` is an
# empty crate which only depends on `strum` which is the only dependency narwhal cared about.
[patch.'https://github.com/MystenLabs/sui.git']
workspace-hack = { git = "https://github.com/fleek-network/empty-workspace-hack.git", rev = "c07eb1e343a455d57a5481b50eada03c62b4f2c6" }
sui-types = { git = "https://github.com/daltoncoder/narwhal-hack.git" }
sui-keys = { git = "https://github.com/daltoncoder/narwhal-hack.git" }

[profile.release]
# include some debug info, useful for backtraces
debug = 1
# perform "fat" link time optimization on the workspace and all dependencies
lto = true
# enables full optimization, disregarding binary size, with loop vectorization
opt-level = 3
# On panic terminate the process.
panic = 'abort'

# The profile that 'cargo dist' will build with
[profile.dist]
inherits = "release"
lto = "thin"
